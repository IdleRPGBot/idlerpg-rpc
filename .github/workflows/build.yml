name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Discord Game SDK
        working-directory: ${{ runner.temp }}
        run: |
          curl -sO https://dl-game-sdk.discordapp.net/latest/discord_game_sdk.zip
          unzip ./discord_game_sdk.zip
          cp lib/x86_64/discord_game_sdk.so         lib/x86_64/libdiscord_game_sdk.so
          cp lib/x86_64/discord_game_sdk.dylib      lib/x86_64/libdiscord_game_sdk.dylib
          cp lib/x86_64/discord_game_sdk.dll.lib    lib/x86_64/discord_game_sdk.lib
          cp lib/x86/discord_game_sdk.dll.lib       lib/x86/discord_game_sdk.lib

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: x86_64-unknown-linux-gnu
          toolchain: nightly
          override: true

      - name: Build
        run: |
          export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}$PWD/lib/x86_64"
          cargo build --release --all --all-targets --target=x86_64-unknown-linux-gnu
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: idlerpg-presence
          path: target/x86_64-unknown-linux-gnu/release/idlerpg-rich-presence

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Discord Game SDK
        working-directory: ${{ runner.temp }}
        run: |
          curl -sO https://dl-game-sdk.discordapp.net/latest/discord_game_sdk.zip
          unzip ./discord_game_sdk.zip
          cp lib/x86_64/discord_game_sdk.so         lib/x86_64/libdiscord_game_sdk.so
          cp lib/x86_64/discord_game_sdk.dylib      lib/x86_64/libdiscord_game_sdk.dylib
          cp lib/x86_64/discord_game_sdk.dll.lib    lib/x86_64/discord_game_sdk.lib
          cp lib/x86/discord_game_sdk.dll.lib       lib/x86/discord_game_sdk.lib

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: x86_64-apple-darwin
          toolchain: nightly
          override: true

      - name: Build
        run: |
          export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH:+${DYLD_LIBRARY_PATH}:}$PWD/lib/x86_64"
          cargo build --release --all --all-targets --target=x86_64-apple-darwin
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: idlerpg-presence
          path: target/x86_64-apple-darwin/release/idlerpg-rich-presence

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Discord Game SDK
        working-directory: ${{ runner.temp }}
        run: |
          curl -sO https://dl-game-sdk.discordapp.net/latest/discord_game_sdk.zip
          unzip ./discord_game_sdk.zip
          cp lib/x86_64/discord_game_sdk.so         lib/x86_64/libdiscord_game_sdk.so
          cp lib/x86_64/discord_game_sdk.dylib      lib/x86_64/libdiscord_game_sdk.dylib
          cp lib/x86_64/discord_game_sdk.dll.lib    lib/x86_64/discord_game_sdk.lib
          cp lib/x86/discord_game_sdk.dll.lib       lib/x86/discord_game_sdk.lib

      - name: Cache libclang
        id: cache-libclang
        uses: actions/cache@v1
        with:
          path: 'C:\just-libclang'
          key: windows-libclang

      - name: Install LLVM
        if: steps.cache-libclang.outputs.cache-hit != 'true'
        run: |
          choco install llvm -r -y
          mkdir 'C:\just-libclang'
          cp 'C:\Program Files\LLVM\bin\libclang.dll' 'C:\just-libclang'

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: x86_64-apple-darwin
          toolchain: nightly
          override: true

      - name: Build
        run: |
          export LIBCLANG_PATH="C:\just-libclang"
          cargo build --release --all --all-targets --target=x86_64-pc-windows-msvc
        env:
          DISCORD_GAME_SDK_PATH: ${{ runner.temp }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: idlerpg-presence
          path: target/x86_64-pc-windows-msvc/release/idlerpg-rich-presence
